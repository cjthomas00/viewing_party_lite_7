---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?maxResults=20&query=Love
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - Bearer <MOVIEDB_API_KEY>
      User-Agent:
      - Faraday v2.7.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 23 Mar 2023 17:29:52 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=28800
      X-Memc:
      - HIT
      X-Memc-Key:
      - 7605cc38ee51fa2e1a5d5062d5f4e88d
      X-Memc-Age:
      - '11676'
      X-Memc-Expires:
      - '9924'
      Etag:
      - W/"3a70be6d829909a622a9d653f6d90d8a"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 ac79b9352835edad28c9b0bc7dd7f8b0.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN52-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - N0krVJ5uPRzAkdhpeJoqe5fE59wP4V9YdAP3kBPHKQ6_2KKL2XKPNg==
      Age:
      - '1189'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 23 Mar 2023 17:49:41 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?maxResults=20&query=Love
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - Bearer <MOVIEDB_API_KEY>
      User-Agent:
      - Faraday v2.7.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 23 Mar 2023 17:29:52 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=28800
      X-Memc:
      - HIT
      X-Memc-Key:
      - 7605cc38ee51fa2e1a5d5062d5f4e88d
      X-Memc-Age:
      - '11676'
      X-Memc-Expires:
      - '9924'
      Etag:
      - W/"3a70be6d829909a622a9d653f6d90d8a"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 f111faa3f37b2169cefb225b0f246234.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN52-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - 0Uxv0wlXHWN6AyMJHZ3YomP-ZeHQfLtauPgsxTizeXdu3caDn3XU_w==
      Age:
      - '1190'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 23 Mar 2023 17:49:41 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?maxResults=20&query=Love
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - Bearer <MOVIEDB_API_KEY>
      User-Agent:
      - Faraday v2.7.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 23 Mar 2023 17:29:52 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=28800
      X-Memc:
      - HIT
      X-Memc-Key:
      - 7605cc38ee51fa2e1a5d5062d5f4e88d
      X-Memc-Age:
      - '11676'
      X-Memc-Expires:
      - '9924'
      Etag:
      - W/"3a70be6d829909a622a9d653f6d90d8a"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 badefad2d1fb92bb4620df1ce11d8c92.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN52-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - am4CCI1kztCYH3Sr57PDxkiEkP3okG3vP8rS3ybtc5nY3pAzfkBv0A==
      Age:
      - '1190'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 23 Mar 2023 17:49:41 GMT
recorded_with: VCR 6.1.0
